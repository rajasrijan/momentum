/*
 * Copyright 2009-2021 Srijan Kumar Sharma
 * 
 * This file is part of Momentum.
 * 
 * Momentum is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * Momentum is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with Momentum.  If not, see <http://www.gnu.org/licenses/>.
 */

#ifndef _RING_BUFFER_
#define _RING_BUFFER_
#include <stdint.h>
#include <stddef.h>

template <typename T, size_t buffer_size>
class ring_buffer
{
private:
    T buffer[buffer_size];
    uint64_t ullBufferWriteIndex;
    uint64_t ullBufferReadIndex;

public:
    ring_buffer() : buffer{}, ullBufferWriteIndex(0), ullBufferReadIndex(0)
    {
    }
    void write(T &t)
    {
        buffer[ullBufferWriteIndex] = t;
        ullBufferWriteIndex = (ullBufferWriteIndex + 1) % buffer_size;
    }
    T &read()
    {
        while (true)
            if (((ullBufferWriteIndex - ullBufferReadIndex) % buffer_size) > 0)
            {
                T &tmp = buffer[ullBufferReadIndex];
                ullBufferReadIndex = (ullBufferReadIndex + 1) % buffer_size;
                return tmp;
            }
            else
            {
                asm("pause;hlt");
            }
    }
};
#endif