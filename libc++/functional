/*
 * Copyright 2009-2021 Srijan Kumar Sharma
 * 
 * This file is part of Momentum.
 * 
 * Momentum is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * Momentum is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with Momentum.  If not, see <http://www.gnu.org/licenses/>.
 */
#pragma once

template <typename>
class function; // no definition

template <typename ReturnValue, typename... Args>
class function<ReturnValue(Args...)>
{
  private:
    ReturnValue (*_fn)(Args...);

  public:
    function() :
        _fn(nullptr)
    {
    }
    function(const function &f) :
        _fn(f._fn)
    {
    }
    function(ReturnValue (*fn)(Args...)) :
        _fn(fn)
    {
    }
    ReturnValue operator()(Args... args) const
    {
        return _fn(args...);
    }
    function &operator=(const function &f)
    {
        _fn = f._fn;
        return *this;
    }

    bool operator==(const function &rhs)
    {
        return _fn == rhs._fn;
    }

    explicit operator bool() const noexcept
    {
        return _fn != nullptr;
    }
};
